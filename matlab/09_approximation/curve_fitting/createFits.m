function [fitresult, gof] = createFits(x, y, z)
%CREATEFITS(X,Y,Z)
%  Create fits.
%
%  Data for 'model 1' fit:
%      X Input : x
%      Y Input : y
%      Z Output: z
%  Data for 'model 2' fit:
%      X Input : x
%      Y Input : y
%      Z Output: z
%  Data for 'model 3' fit:
%      X Input : x
%      Y Input : y
%      Z Output: z
%  Data for 'model 4' fit:
%      X Input : x
%      Y Input : y
%      Z Output: z
%  Data for 'test model' fit:
%      X Input : x
%      Y Input : y
%      Z Output: z
%  Output:
%      fitresult : a cell-array of fit objects representing the fits.
%      gof : structure array with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 12-May-2020 11:34:19

%% Initialization.

% Initialize arrays to store fits and goodness-of-fit.
fitresult = cell( 5, 1 );
gof = struct( 'sse', cell( 5, 1 ), ...
    'rsquare', [], 'dfe', [], 'adjrsquare', [], 'rmse', [] );

%% Fit: 'model 1'.
[xData, yData, zData] = prepareSurfaceData( x, y, z );

% Set up fittype and options.
ft = fittype( 'a*x+b*y+c', 'independent', {'x', 'y'}, 'dependent', 'z' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.StartPoint = [0.964888535199277 0.157613081677548 0.970592781760616];

% Fit model to data.
[fitresult{1}, gof(1)] = fit( [xData, yData], zData, ft, opts );

% Plot fit with data.
figure( 'Name', 'model 1' );
h = plot( fitresult{1}, [xData, yData], zData );
legend( h, 'model 1', 'z vs. x, y', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 'x', 'Interpreter', 'none' );
ylabel( 'y', 'Interpreter', 'none' );
zlabel( 'z', 'Interpreter', 'none' );
grid on

%% Fit: 'model 2'.
[xData, yData, zData] = prepareSurfaceData( x, y, z );

% Set up fittype and options.
ft = fittype( 'a*x^2+b*y^2+c', 'independent', {'x', 'y'}, 'dependent', 'z' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.StartPoint = [0.988486672970421 0.822907490375477 0.231332812790857];

% Fit model to data.
[fitresult{2}, gof(2)] = fit( [xData, yData], zData, ft, opts );

% Plot fit with data.
figure( 'Name', 'model 2' );
h = plot( fitresult{2}, [xData, yData], zData );
legend( h, 'model 2', 'z vs. x, y', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 'x', 'Interpreter', 'none' );
ylabel( 'y', 'Interpreter', 'none' );
zlabel( 'z', 'Interpreter', 'none' );
grid on

%% Fit: 'model 3'.
[xData, yData, zData] = prepareSurfaceData( x, y, z );

% Set up fittype and options.
ft = fittype( 'a*x^2+b*y^2+c*x*y+d', 'independent', {'x', 'y'}, 'dependent', 'z' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.StartPoint = [0.0506183223520434 0.859985374168749 0.946509582748833 0.655740699156587];

% Fit model to data.
[fitresult{3}, gof(3)] = fit( [xData, yData], zData, ft, opts );

% Plot fit with data.
figure( 'Name', 'model 3' );
h = plot( fitresult{3}, [xData, yData], zData );
legend( h, 'model 3', 'z vs. x, y', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 'x', 'Interpreter', 'none' );
ylabel( 'y', 'Interpreter', 'none' );
zlabel( 'z', 'Interpreter', 'none' );
grid on

%% Fit: 'model 4'.
[xData, yData, zData] = prepareSurfaceData( x, y, z );

% Set up fittype and options.
ft = fittype( 'a*x^3+b*x^2+c*x+d*y^3+e*y^2+f*y+g', 'independent', {'x', 'y'}, 'dependent', 'z' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.StartPoint = [0.348981651816042 0.52739433026396 0.886387237876957 0.678735154857773 0.757740130578333 0.743132468124916 0.392227019534168];

% Fit model to data.
[fitresult{4}, gof(4)] = fit( [xData, yData], zData, ft, opts );

% Plot fit with data.
figure( 'Name', 'model 4' );
h = plot( fitresult{4}, [xData, yData], zData );
legend( h, 'model 4', 'z vs. x, y', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 'x', 'Interpreter', 'none' );
ylabel( 'y', 'Interpreter', 'none' );
zlabel( 'z', 'Interpreter', 'none' );
grid on

%% Fit: 'test model'.
[xData, yData, zData] = prepareSurfaceData( x, y, z );

% Set up fittype and options.
ft = fittype( 'c1*x^6+c2*y+c3*x*y+c4*sin(x)*cos(x)+c5*cos(x)*sin(y)+c6*cos(y)+c7*sin(x)+c8', 'independent', {'x', 'y'}, 'dependent', 'z' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.StartPoint = [0.171186687811562 0.706046088019609 0.0318328463774207 0.27692298496089 0.0971317812358475 0.823457828327293 0.489764395788231 0.445586200710899];

% Fit model to data.
[fitresult{5}, gof(5)] = fit( [xData, yData], zData, ft, opts );

% Plot fit with data.
figure( 'Name', 'test model' );
h = plot( fitresult{5}, [xData, yData], zData );
legend( h, 'test model', 'z vs. x, y', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 'x', 'Interpreter', 'none' );
ylabel( 'y', 'Interpreter', 'none' );
zlabel( 'z', 'Interpreter', 'none' );
grid on


